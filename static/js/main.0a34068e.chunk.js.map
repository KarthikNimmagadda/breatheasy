{"version":3,"sources":["WaterBreathing.js","WhiskeyBreathing.js","CoffeeBreathing.js","Header.js","App.js","reportWebVitals.js","index.js"],"names":["WaterBreathing","_useState","useState","_useState2","Object","slicedToArray","animationState","setAnimationState","_useState3","_useState4","showSpinner","setShowSpinner","spinnerSVG","react_default","a","createElement","viewBox","id","stroke","strokeLinecap","strokeWidth","d","className","style","animation","concat","href","Button","variant","size","onClick","display","WhiskeyBreathing","CoffeeBreathing","Header","_ref","onBreathingSelected","App","selectedBreathing","setSelectedBreathing","WaterBreathing_WaterBreathing","WhiskeyBreathing_WhiskeyBreathing","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0a34068e.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport './WaterBreathing.css';\n\nexport default function WaterBreathing() {\n  const [animationState, setAnimationState] = useState('paused');\n  const [showSpinner, setShowSpinner] = useState(false);\n\n  const spinnerSVG = (\n    <svg viewBox=\"0 0 24 22\">\n      <path\n        id=\"spinner\"\n        stroke=\"#c25\"\n        strokeLinecap=\"round\"\n        strokeWidth=\"13\"\n        d=\"M6.6 6.6q1 3 5 6 4-3 5-6\"\n        className=\"spinner-animation\"\n        style={{\n          animation: `spinner-animation 8s infinite ${animationState === 'paused' ? 'paused' : 'running'}`,\n        }}\n      />\n    </svg>\n  );\n\n  return (\n    <div>\n      <div>\n        <p>Inhale and Exhale along with the animation, Breathe in and breathe out through your nose. Refer this <a href=\"https://www.youtube.com/watch?v=pWsXA8jlaWE\">video</a></p>\n        <p>Note: You can do water breathing exercise as many times as you can. Helps with stress and anxiety.</p>\n        <Button variant=\"outline-secondary\" size=\"sm\" className={animationState === 'running' ? 'btn-youtube-pause' : 'btn-youtube-play'} onClick={() => \n            {\n              setAnimationState(animationState === 'running' ? 'paused' : 'running');\n              setShowSpinner(true);\n            }\n          }>\n          {animationState === 'running' ? 'Pause' : 'Start'}\n        </Button>\n      </div>\n      <div className=\"spinner\" style={{ display: showSpinner ? 'block' : 'none' }}>{spinnerSVG}</div>\n    </div>\n  );\n}","import React, { useRef, useEffect , useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport './WhiskeyBreathing.css';\n\nexport default function WhiskeyBreathing() {\n  const [animationState, setAnimationState] = useState('paused');\n  const [showSpinner, setShowSpinner] = useState(false);\n\n  const spinnerSVG = (\n    <svg viewBox=\"0 0 24 22\">\n      <path\n        id=\"spinner\"\n        stroke=\"#c25\"\n        strokeLinecap=\"round\"\n        strokeWidth=\"13\"\n        d=\"M6.6 6.6q1 3 5 6 4-3 5-6\"\n        className=\"spinner-animation\"\n        style={{\n          animation: `spinner-animation 12s infinite ${animationState === 'paused' ? 'paused' : 'running'}`,\n        }}\n      />\n    </svg>\n  );\n\n  return (\n    <div>\n        <div>\n            <p>Inhale and Exhale along with the animation, Breathe in and breathe out through your nose. Refer this <a href=\"https://www.youtube.com/watch?v=pWsXA8jlaWE\">video</a></p>\n            <p>Note: This breathing technique will help you with sleep.</p>\n            <Button variant=\"outline-secondary\" size=\"sm\" className={animationState === 'running' ? 'btn-youtube-pause' : 'btn-youtube-play'} onClick={() => \n                    {\n                        setAnimationState(animationState === 'running' ? 'paused' : 'running');\n                        setShowSpinner(true);\n                    }\n                }\n            >\n                {animationState === 'running' ? 'Pause' : 'Start'}\n            </Button>\n        </div>\n        <div className=\"spinner\" style={{ display: showSpinner ? 'block' : 'none' }}>{spinnerSVG}</div>\n    </div>\n  );\n}\n","import React, { useRef, useEffect , useState } from 'react';\nimport { Button } from 'react-bootstrap';\nimport './WhiskeyBreathing.css';\n\nexport default function CoffeeBreathing() {\n  const [animationState, setAnimationState] = useState('paused');\n  const [showSpinner, setShowSpinner] = useState(false);\n\n  const spinnerSVG = (\n    <svg viewBox=\"0 0 24 22\">\n      <path\n        id=\"spinner\"\n        stroke=\"#c25\"\n        strokeLinecap=\"round\"\n        strokeWidth=\"13\"\n        d=\"M6.6 6.6q1 3 5 6 4-3 5-6\"\n        className=\"spinner-animation\"\n        style={{\n          animation: `spinner-animation 20s infinite ${animationState === 'paused' ? 'paused' : 'running'}`,\n        }}\n      />\n    </svg>\n  );\n\n  return (\n    <div>\n      <div>\n        <p>Inhale and exhale along with the animation. Exhale through your nose like a sharp sneeze and then relax and inhale. Refer this <a href=\"https://www.youtube.com/watch?v=pWsXA8jlaWE\">video</a></p>\n        <p>Note: This breathing technique will help get a boost of energy, use it before exercising.</p>\n        <Button variant=\"outline-secondary\" size=\"sm\" className={animationState === 'running' ? 'btn-youtube-pause' : 'btn-youtube-play'} onClick={() => {\n                setAnimationState(animationState === 'running' ? 'paused' : 'running');\n                setShowSpinner(true);\n              }\n            }>\n          {animationState === 'running' ? 'Pause' : 'Start'}\n        </Button>\n      </div>\n      <div className=\"spinner\" style={{ display: showSpinner ? 'block' : 'none' }}>{spinnerSVG}</div>\n    </div>\n  );\n}\n","import { Button } from 'react-bootstrap';\nimport React from 'react';\nimport './App.css';\n\nexport default function Header({ onBreathingSelected }) {\n    return (\n      <div>\n          <Button variant=\"outline-primary\" size=\"lg\" className=\"mr-2 mb-2\" onClick={() => onBreathingSelected('water')}>Water Breathing</Button>\n          <Button variant=\"outline-primary\" size=\"lg\" className=\"mr-2 mb-2\" onClick={() => onBreathingSelected('whiskey')}>Whiskey Breathing</Button>\n          <Button variant=\"outline-primary\" size=\"lg\" className=\"mr-2 mb-2\" onClick={() => onBreathingSelected('coffee')}>Coffee Breathing</Button>\n      </div>\n    );\n  }\n  ","import React, { useState } from 'react';\nimport './App.css';\nimport WaterBreathing from './WaterBreathing';\nimport WhiskeyBreathing from './WhiskeyBreathing';\nimport CoffeeBreathing from './CoffeeBreathing';\nimport Header from './Header';\n\nfunction App() {\n  const [selectedBreathing, setSelectedBreathing] = useState('');\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"container\">\n          <Header onBreathingSelected={setSelectedBreathing} />\n        </div>\n      </header>\n      <main className=\"App-content\">\n          {selectedBreathing === 'water' && <WaterBreathing />}\n          {selectedBreathing === 'whiskey' && <WhiskeyBreathing />}\n          {selectedBreathing === 'coffee' && <CoffeeBreathing />}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}